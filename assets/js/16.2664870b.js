(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{379:function(t,e,a){"use strict";a.r(e);var i=a(18),r=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"build-raspbian"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-raspbian"}},[t._v("#")]),t._v(" Build Raspbian")]),t._v(" "),a("p",[t._v("FlyDog SDR provides an image of Raspbian with FlyDog SDR already integrated, or you can build your own Raspbian with FlyDog SDR already integrated.")]),t._v(" "),a("h2",{attrs:{id:"build-the-development-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-the-development-environment"}},[t._v("#")]),t._v(" Build the Development Environment")]),t._v(" "),a("p",[t._v("To build a Raspbian image for FlyDog SDR, you need to be on an "),a("code",[t._v("armv7l")]),t._v(" or "),a("code",[t._v("x86_64")]),t._v(" processor architecture.")]),t._v(" "),a("h3",{attrs:{id:"system-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system-requirements"}},[t._v("#")]),t._v(" System Requirements")]),t._v(" "),a("p",[t._v("The following requirements need to be met before building Raspbian with FlyDog SDR integrated.")]),t._v(" "),a("ul",[a("li",[t._v("The processor architecture of the machine to be built is "),a("code",[t._v("armv7l")]),t._v(" or "),a("code",[t._v("x86_64")])]),t._v(" "),a("li",[t._v("The machine to be built uses a Linux distribution of Debian Buster or Ubuntu Bionic")]),t._v(" "),a("li",[t._v("The machine to be built is not running in a container (Docker)")]),t._v(" "),a("li",[t._v("The machine used for the build has not run Docker and will not run Docker in the future")])]),t._v(" "),a("h3",{attrs:{id:"dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[t._v("#")]),t._v(" Dependencies")]),t._v(" "),a("p",[t._v("Dependencies for building Raspbian need to be installed before you can perform the build task.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fdsdr@flydog-sdr-project:~$ apt-get update\nfdsdr@flydog-sdr-project:~$ apt-get -y install binfmt-support \\\n                   coreutils \\\n                   quilt \\\n                   parted \\\n                   qemu-user-static \\\n                   debootstrap \\\n                   zerofree \\\n                   zip \\\n                   dosfstools \\\n                   bsdtar \\\n                   libcap2-bin \\\n                   rsync \\\n                   xz-utils \\\n                   file \\\n                   git \\\n                   curl \\\n                   bc\nfdsdr@flydog-sdr-project:~$ apt-get autoremove --purge -y\n")])])]),a("h3",{attrs:{id:"get-source-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-source-code"}},[t._v("#")]),t._v(" Get Source Code")]),t._v(" "),a("p",[t._v("Pull the source code from GitHub to build Raspbian with FlyDog SDR integration.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fdsdr@flydog-sdr-project:~$ git clone https://github.com/flydog-sdr/raspbian-builder\n")])])]),a("p",[t._v("For mainland China, you can pull using the GitHub mirror (github.com.cnpmjs.org).")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fdsdr@flydog-sdr-project:~$ git clone https://github.com.cnpmjs.org/flydog-sdr/raspbian-builder\n")])])]),a("h3",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),a("p",[t._v("Go to the "),a("code",[t._v("raspbian-builder")]),t._v(" directory and modify "),a("code",[t._v("config")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fdsdr@flydog-sdr-project:~$ cd raspbian-builder\nfdsdr@flydog-sdr-project:~/raspbian-builder$ vim config\n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("variables")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("IMG_NAME")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Image name")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("RELEASE")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Debian version code")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("TARGET_HOSTNAME")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Specify the host name")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("FIRST_USER_NAME")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Specify the username")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("FIRST_USER_PASS")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Specify the user password")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ENABLE_SSH")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Enable SSH")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("LOCALE_DEFAULT")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Default Locale")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("KEYBOARD_KEYMAP")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Default keyboard layout")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("TIMEZONE_DEFAULT")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Default Time Zone")])])])]),t._v(" "),a("h2",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" Build")]),t._v(" "),a("p",[t._v("Switch to the "),a("code",[t._v("root")]),t._v(" user and run "),a("code",[t._v("wizard.sh")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("fdsdr@flydog-sdr-project:~/raspbian-builder$ sudo su\nroot@flydog-sdr-project:~/raspbian-builder# ./wizard.sh\n")])])]),a("p",[t._v("Once the image has been built, the generated image can be found under "),a("code",[t._v("builder/deploy/")]),t._v(".")])])}),[],!1,null,null,null);e.default=r.exports}}]);