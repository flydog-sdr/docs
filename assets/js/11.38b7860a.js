(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{373:function(t,e,i){"use strict";i.r(e);var v=i(18),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"构建-fpga-比特流"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#构建-fpga-比特流"}},[t._v("#")]),t._v(" 构建 FPGA 比特流")]),t._v(" "),i("p",[t._v("FlyDog SDR 使用 FPGA 处理由 ADC 采样后得到的数据，所以需要构建相关 FPGA 比特流文件（.bit）。")]),t._v(" "),i("h2",{attrs:{id:"搭建开发环境"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#搭建开发环境"}},[t._v("#")]),t._v(" 搭建开发环境")]),t._v(" "),i("p",[t._v("FlyDog SDR 使用 Vivado 2017.4 进行 FPGA 开发。")]),t._v(" "),i("h3",{attrs:{id:"系统要求"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#系统要求"}},[t._v("#")]),t._v(" 系统要求")]),t._v(" "),i("p",[t._v("Vivado 2017.4 支持以下版本的操作系统及发行版（限基于 x86-64 的处理器架构）。")]),t._v(" "),i("ul",[i("li",[t._v("Microsoft Windows 7")]),t._v(" "),i("li",[t._v("Microsoft Windows 10")]),t._v(" "),i("li",[t._v("Red Hat Enterprise Linux 6.6")]),t._v(" "),i("li",[t._v("SUSE Linux Enterprise 11.4")]),t._v(" "),i("li",[t._v("CentOS 7")]),t._v(" "),i("li",[t._v("Ubuntu Linux 16.04 LTS")])]),t._v(" "),i("p",[t._v("Vivado 2017.4 安装后，将会占用约 23 GB 的磁盘空间。")]),t._v(" "),i("p",[t._v("有关 Vivado 2017.4 的版本发布通知，详见 "),i("a",{attrs:{href:"https://www.xilinx.com/support/documentation/sw_manuals/xilinx2017_4/ug973-vivado-release-notes-install-license.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("ug973-vivado-release-notes-install-license.pdf"),i("OutboundLink")],1),t._v("。")]),t._v(" "),i("h3",{attrs:{id:"下载-vivado"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#下载-vivado"}},[t._v("#")]),t._v(" 下载 Vivado")]),t._v(" "),i("p",[t._v("要下载 Vivado 2017.4，开发者需先 "),i("a",{attrs:{href:"https://www.xilinx.com/registration/create-account.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建一个 Xilinx 账户"),i("OutboundLink")],1),t._v("。")]),t._v(" "),i("p",[t._v("登入账户后前往 "),i("a",{attrs:{href:"https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/vivado-design-tools/archive.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vivado 2017.4 下载页面"),i("OutboundLink")],1),t._v("，选择 "),i("strong",[t._v("Vivado HLx 2017.4: All OS installer Single-File Download")]),t._v(" 并填写相关表格后，获取文件下载链接。")]),t._v(" "),i("p",[t._v("Vivado 2017.4 文件大小为 16.17 GB，下载时需要保持网络通畅。")]),t._v(" "),i("h3",{attrs:{id:"安装-vivado"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#安装-vivado"}},[t._v("#")]),t._v(" 安装 Vivado")]),t._v(" "),i("p",[t._v("解压 "),i("code",[t._v("Xilinx_Vivado_SDK_2017.4_1216_1.tar.gz")]),t._v(" 后，Windows 下以管理员身份执行 "),i("code",[t._v("xsetup.exe")]),t._v("，Linux 下以特权模式（sudo）执行 xsetup。")]),t._v(" "),i("p",[t._v("在安装过程中，选择安装 ISE WebPACK Design Software。")]),t._v(" "),i("p",[t._v("安装完成后，用户可以设定相关环境变量，以保证能够在终端中执行 Vivado 相关命令（可选设置）。")]),t._v(" "),i("p",[t._v("对于 Windows 系统，在“高级系统设置”中将 "),i("code",[t._v("Vivado 安装路径/bin")]),t._v(" 添加到 "),i("code",[t._v("PATH")]),t._v(" 中。")]),t._v(" "),i("p",[t._v("对于 Linux 系统，将 "),i("code",[t._v("export PATH=/opt/Xilinx/Vivado/2017.4/bin:$PATH")]),t._v(" 添加到当前用户 "),i("code",[t._v(".bashrc")]),t._v(" 文件中即可。")]),t._v(" "),i("h2",{attrs:{id:"创建-vivado-专案"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创建-vivado-专案"}},[t._v("#")]),t._v(" 创建 Vivado 专案")]),t._v(" "),i("h3",{attrs:{id:"获取源码和-ip-核"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#获取源码和-ip-核"}},[t._v("#")]),t._v(" 获取源码和 IP 核")]),t._v(" "),i("p",[t._v("使用 Git 获取 FlyDog_SDR_GPS 核心源码。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("[fdsdr@flydog-sdr-project ~]$ git clone https://github.com/flydog-sdr/FlyDog_SDR_GPS.git\n")])])]),i("p",[t._v("对于中国大陆，可以使用 GitHub 镜像（github.com.cnpmjs.org）进行拉取。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("[fdsdr@flydog-sdr-project ~]$ git clone https://github.com.cnpmjs.org/flydog-sdr/FlyDog_SDR_GPS.git\n")])])]),i("p",[t._v("新建一个名为 "),i("code",[t._v("project")]),t._v(" 的空目录，并在这个空目录中新建子目录 "),i("code",[t._v("flydog")]),t._v("。")]),t._v(" "),i("p",[t._v("然后在 "),i("code",[t._v("flydog")]),t._v(" 目录下新建 "),i("code",[t._v("import_src")]),t._v(" 和 "),i("code",[t._v("import_ip")]),t._v(" 两个目录，目录树结构如下。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("[fdsdr@flydog-sdr-project ~]$ tree -d project\nproject\n└── flydog\n    ├── import_ip\n    └── import_src\n\n3 directories\n")])])]),i("p",[t._v("将 "),i("code",[t._v("FlyDog_SDR_GPS/verilog")]),t._v(" 下的所有内容拷贝到 "),i("code",[t._v("project/flydog/import_src")]),t._v("，将 "),i("code",[t._v("FlyDog_SDR_GPS/verilog.Vivado.2017.4.ip")]),t._v(" 下的所有内容拷贝到 "),i("code",[t._v("project/flydog/import_ip")]),t._v("。")]),t._v(" "),i("p",[i("code",[t._v("import_src")]),t._v(" 包含了 FPGA 相关工程文件，"),i("code",[t._v("flydog/import_ip")]),t._v(" 包含了相关 IP 核。")]),t._v(" "),i("h3",{attrs:{id:"创建专案并导入源码和-ip-核"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创建专案并导入源码和-ip-核"}},[t._v("#")]),t._v(" 创建专案并导入源码和 IP 核")]),t._v(" "),i("p",[t._v("启动 Vivado 2017.4，在主页 Quick Start 下方选择 Create Project，新建一个专案。")]),t._v(" "),i("ol",[i("li",[t._v("在出现的向导中填入专案名称（flydog），并选择 "),i("code",[t._v("project")]),t._v(" 目录所在的路径。\n"),i("img",{attrs:{src:"/developer/fpga_1.png",alt:"Project Name",title:"Project Name"}})]),t._v(" "),i("li",[t._v("Project Type 选择 RTL Project，不勾选 Do not specify source at this time。")]),t._v(" "),i("li",[t._v("按下 Add Directories，选择 "),i("code",[t._v("project/flydog/import_src")]),t._v("。勾选 Scan and add RTL include files into project 和 Add sources from sub directories，取消勾选 Copy sources into project。\n"),i("img",{attrs:{src:"/developer/fpga_2.png",alt:"Add Sources",title:"Add Sources"}})]),t._v(" "),i("li",[t._v("在 Add Constraints 页面中按下 Add Files，选择 "),i("code",[t._v("KiwiSDR.xdc")]),t._v("，不勾选 Copy constraints files into project。\n"),i("img",{attrs:{src:"/developer/fpga_3.png",alt:"Add Constraints",title:"Add Constraints"}})]),t._v(" "),i("li",[t._v("在 Default Part 页面中选择硬件。在搜索框中输入 "),i("code",[t._v("xc7a35tftg256-1")]),t._v("，选中列出的硬件。\n"),i("img",{attrs:{src:"/developer/fpga_4.png",alt:"Default Part",title:"Default Part"}})])]),t._v(" "),i("p",[t._v("专案创建完成后，在 Vivado 2017.4 主界面左侧选单按下 Add Sources，添加 IP 核。")]),t._v(" "),i("ol",[i("li",[t._v("在出现的向导中选择 Add or create design sources。")]),t._v(" "),i("li",[t._v("在随后出现的 Add or Create Design Sources 页面中按下 Add Directories，选择 "),i("code",[t._v("project/flydog/import_ip")]),t._v("。勾选 Copy sources into project 和 Add sources from subdirectories，取消勾选 Scan and add RTL include files into project。\n"),i("img",{attrs:{src:"/developer/fpga_5.png",alt:"Add or Create Design Sources",title:"Add or Create Design Sources"}})]),t._v(" "),i("li",[t._v("按下 Finish，完成 IP 核的导入。")])]),t._v(" "),i("p",[t._v("IP 核导入时出现的严重警告是安全的，可以忽略。")]),t._v(" "),i("h2",{attrs:{id:"生成-fpga-比特流"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#生成-fpga-比特流"}},[t._v("#")]),t._v(" 生成 FPGA 比特流")]),t._v(" "),i("p",[t._v("在 Sources 窗口中展开 Verilog Header 一项，双击 "),i("code",[t._v("kiwi.cfg.vh")]),t._v(" 对其进行编辑。")]),t._v(" "),i("p",[i("code",[t._v("kiwi.cfg.vh")]),t._v(" 会指定 Vivado 2017.4 生成不同的 FPGA 比特流文件，对应 FlyDog SDR 的 4 种接收模式。")]),t._v(" "),i("h3",{attrs:{id:"生成-kiwisdr-rx4-wf4-bit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx4-wf4-bit"}},[t._v("#")]),t._v(" 生成 KiwiSDR.rx4.wf4.bit")]),t._v(" "),i("p",[t._v("默认情况下，"),i("code",[t._v("kiwi.cfg.vh")]),t._v(" 中的配置为四用户（rx4）四瀑布（wf4）。")]),t._v(" "),i("p",[t._v("在 Vivado 2017.4 主界面左侧选单按下 Generate Bitstream，随后 Vivado 2017.4 会对 IP 核进行综合，综合完成后，开始生成 FPGA 比特流。")]),t._v(" "),i("p",[t._v("根据计算机配置的不同，该过程所使用的时间亦有差异。")]),t._v(" "),i("p",[t._v("在综合过程中，会出现 Synthesis out-of-date 的警告，可以忽略。")]),t._v(" "),i("p",[t._v("生成的 FPGA 比特流文件路径为 "),i("code",[t._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),t._v("。将该文件重命名为 "),i("code",[t._v("KiwiSDR.rx4.wf4.bit")]),t._v(" 后，移动到其他目录。")]),t._v(" "),i("p",[t._v("直接关闭 Vivado 2017.4，然后通过 "),i("code",[t._v("project/flydog/flydog.xpr")]),t._v(" 重新打开专案，避免 Vivado 2017.4 因 Synthesis out-of-date 警告而导致接下来构建其他模式 FPGA 比特流时再次对 IP 核进行综合。")]),t._v(" "),i("h3",{attrs:{id:"生成-kiwisdr-rx3-wf3-bit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx3-wf3-bit"}},[t._v("#")]),t._v(" 生成 KiwiSDR.rx3.wf3.bit")]),t._v(" "),i("p",[t._v("修改 "),i("code",[t._v("kiwi.cfg.vh")]),t._v(" 文件 "),i("code",[t._v("RX_CFG")]),t._v(" 对应值为 "),i("code",[t._v("3")]),t._v("。")]),t._v(" "),i("p",[t._v("代码如下。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("parameter RX_CFG = 4;\n`define USE_WF\n")])])]),i("p",[t._v("然后在 Vivado 2017.4 主界面左侧选单按下 Generate Bitstream。")]),t._v(" "),i("p",[t._v("生成的 FPGA 比特流文件路径为 "),i("code",[t._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),t._v("。将该文件重命名为 "),i("code",[t._v("KiwiSDR.rx3.wf3.bit")]),t._v(" 后，移动到其他目录。")]),t._v(" "),i("h3",{attrs:{id:"生成-kiwisdr-rx8-wf2-bit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx8-wf2-bit"}},[t._v("#")]),t._v(" 生成 KiwiSDR.rx8.wf2.bit")]),t._v(" "),i("p",[t._v("操作与生成 KiwiSDR.rx3.wf3.bit 大致相同，但 "),i("code",[t._v("kiwi.cfg.vh")]),t._v(" 文件 "),i("code",[t._v("RX_CFG")]),t._v(" 字段对应值为 "),i("code",[t._v("8")]),t._v("。")]),t._v(" "),i("p",[t._v("代码如下。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("parameter RX_CFG = 8;\n`define USE_WF\n")])])]),i("p",[t._v("生成的 FPGA 比特流文件路径为 "),i("code",[t._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),t._v("。将该文件重命名为 "),i("code",[t._v("KiwiSDR.rx8.wf2.bit")]),t._v(" 后，移动到其他目录。")]),t._v(" "),i("h3",{attrs:{id:"生成-kiwisdr-rx14-wf0-bit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx14-wf0-bit"}},[t._v("#")]),t._v(" 生成 KiwiSDR.rx14.wf0.bit")]),t._v(" "),i("p",[t._v("操作与生成 KiwiSDR.rx3.wf3.bit 大致相同，但 "),i("code",[t._v("kiwi.cfg.vh")]),t._v(" 文件 "),i("code",[t._v("RX_CFG")]),t._v(" 字段对应值为 "),i("code",[t._v("14")]),t._v("，且需要移除或者注释掉 "),i("code",[t._v("define USE_WF")]),t._v(" 字段。")]),t._v(" "),i("p",[t._v("代码如下。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("parameter RX_CFG = 14;\n//``define USE_WF\n")])])]),i("p",[t._v("生成的 FPGA 比特流文件路径为 "),i("code",[t._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),t._v("。将该文件重命名为 "),i("code",[t._v("KiwiSDR.rx14.wf0.bit")]),t._v(" 后，移动到其他目录。")])])}),[],!1,null,null,null);e.default=r.exports}}]);