(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{373:function(e,t,v){"use strict";v.r(t);var i=v(18),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"构建-fpga-比特流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#构建-fpga-比特流"}},[e._v("#")]),e._v(" 构建 FPGA 比特流")]),e._v(" "),v("p",[e._v("FlyDog SDR 使用 FPGA 处理由 ADC 采样后得到的数据，所以需要构建相关 FPGA 比特流文件（.bit）。")]),e._v(" "),v("h2",{attrs:{id:"搭建开发环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#搭建开发环境"}},[e._v("#")]),e._v(" 搭建开发环境")]),e._v(" "),v("p",[e._v("FlyDog SDR 使用 Vivado 2019.2 进行 FPGA 开发。")]),e._v(" "),v("h3",{attrs:{id:"系统要求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统要求"}},[e._v("#")]),e._v(" 系统要求")]),e._v(" "),v("p",[e._v("Vivado 2019.2 支持以下版本的操作系统及发行版（限基于 x86-64 的处理器架构）。")]),e._v(" "),v("ul",[v("li",[e._v("Microsoft Windows 7 SP1 Professional")]),e._v(" "),v("li",[e._v("Microsoft Windows 10 (Update 1803; 1903)")]),e._v(" "),v("li",[e._v("Red Hat Enterprise Linux (Workstation, Server 7.4; 7.5; 7.6)")]),e._v(" "),v("li",[e._v("SUSE Linux Enterprise 12.4")]),e._v(" "),v("li",[e._v("CentOS 7")]),e._v(" "),v("li",[e._v("Ubuntu Linux (16.04.5; 16.04.6; 18.04.1; 18.04.02)")]),e._v(" "),v("li",[e._v("Amazon Linux 2 LTS")])]),e._v(" "),v("p",[e._v("Vivado 2019.2 安装后，将会占用约 31 GB 的磁盘空间。")]),e._v(" "),v("p",[e._v("有关 Vivado 2019.2 的版本发布通知，详见 "),v("a",{attrs:{href:"https://www.xilinx.com/support/documentation/sw_manuals/xilinx2019_2/ug973-vivado-release-notes-install-license.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("ug973-vivado-release-notes-install-license.pdf"),v("OutboundLink")],1),e._v("。")]),e._v(" "),v("h3",{attrs:{id:"下载-vivado"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下载-vivado"}},[e._v("#")]),e._v(" 下载 Vivado")]),e._v(" "),v("p",[e._v("要下载 Vivado 2019.2，开发者需先 "),v("a",{attrs:{href:"https://www.xilinx.com/registration/create-account.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("创建一个 Xilinx 账户"),v("OutboundLink")],1),e._v("。")]),e._v(" "),v("p",[e._v("登入账户后前往 "),v("a",{attrs:{href:"https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/vivado-design-tools/2019-2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vivado 2019.2 下载页面"),v("OutboundLink")],1),e._v("，选择 "),v("strong",[e._v("Vivado HLx 2019.2: All OS installer Single-File Download")]),e._v(" 并填写相关表格后，获取文件下载链接。")]),e._v(" "),v("p",[e._v("Vivado 2019.2 文件大小为 26.55 GB，下载时需要保持网络通畅。")]),e._v(" "),v("h3",{attrs:{id:"安装-vivado"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安装-vivado"}},[e._v("#")]),e._v(" 安装 Vivado")]),e._v(" "),v("p",[e._v("解压 "),v("code",[e._v("Xilinx_Vivado_2019.2_1106_2127.tar.gz")]),e._v(" 后，Windows 下以管理员身份执行 "),v("code",[e._v("xsetup.exe")]),e._v("，Linux 下以特权模式（sudo）执行 xsetup。")]),e._v(" "),v("p",[e._v("在安装过程中，选择安装 ISE WebPACK Design Software。")]),e._v(" "),v("p",[e._v("安装完成后，用户可以设定相关环境变量，以保证能够在终端中执行 Vivado 相关命令（可选设置）。")]),e._v(" "),v("p",[e._v("对于 Windows 系统，在“高级系统设置”中将 "),v("code",[e._v("Vivado 安装路径/bin")]),e._v(" 添加到 "),v("code",[e._v("PATH")]),e._v(" 中。")]),e._v(" "),v("p",[e._v("对于 Linux 系统，将 "),v("code",[e._v("export PATH=/opt/Xilinx/Vivado/2019.2/bin:$PATH")]),e._v(" 添加到当前用户 "),v("code",[e._v(".bashrc")]),e._v(" 文件中即可。")]),e._v(" "),v("h2",{attrs:{id:"创建-vivado-专案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建-vivado-专案"}},[e._v("#")]),e._v(" 创建 Vivado 专案")]),e._v(" "),v("h3",{attrs:{id:"获取源码和-ip-核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#获取源码和-ip-核"}},[e._v("#")]),e._v(" 获取源码和 IP 核")]),e._v(" "),v("p",[e._v("使用 Git 获取 FlyDog_SDR_GPS 核心源码。")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("[fdsdr@flydog-sdr-project: ~]$ git clone https://github.com/flydog-sdr/FlyDog_SDR_GPS.git\n")])])]),v("p",[e._v("新建一个名为 "),v("code",[e._v("project")]),e._v(" 的空目录，并在这个空目录中新建子目录 "),v("code",[e._v("flydog")]),e._v("。")]),e._v(" "),v("p",[e._v("然后在 "),v("code",[e._v("flydog")]),e._v(" 目录下新建 "),v("code",[e._v("import_src")]),e._v(" 和 "),v("code",[e._v("import_ip")]),e._v(" 两个目录，目录树结构如下。")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("[fdsdr@flydog-sdr-project: ~]$ tree -d project\nproject\n└── flydog\n    ├── import_ip\n    └── import_src\n\n3 directories\n")])])]),v("p",[e._v("将 "),v("code",[e._v("FlyDog_SDR_GPS/verilog")]),e._v(" 下的所有内容拷贝到 "),v("code",[e._v("project/flydog/import_src")]),e._v("，将 "),v("code",[e._v("FlyDog_SDR_GPS/verilog.Vivado.2019.2.ip")]),e._v(" 下的所有内容拷贝到 "),v("code",[e._v("project/flydog/import_ip")]),e._v("。")]),e._v(" "),v("p",[v("code",[e._v("import_src")]),e._v(" 包含了 FPGA 相关工程文件，"),v("code",[e._v("flydog/import_ip")]),e._v(" 包含了相关 IP 核。")]),e._v(" "),v("h3",{attrs:{id:"创建专案并导入源码和-ip-核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建专案并导入源码和-ip-核"}},[e._v("#")]),e._v(" 创建专案并导入源码和 IP 核")]),e._v(" "),v("p",[e._v("启动 Vivado 2019.2，在主页 Quick Start 下方选择 Create Project，新建一个专案。")]),e._v(" "),v("ol",[v("li",[e._v("在出现的向导中填入专案名称（flydog），并选择 "),v("code",[e._v("project")]),e._v(" 目录所在的路径。\n"),v("img",{attrs:{src:"/developer/fpga_1.jpg",alt:"Project Name",title:"Project Name"}})]),e._v(" "),v("li",[e._v("Project Type 选择 RTL Project，不勾选 Do not specify source at this time。")]),e._v(" "),v("li",[e._v("按下 Add Directories，选择 "),v("code",[e._v("project/flydog/import_src")]),e._v("。勾选 Scan and add RTL include files into project 和 Add sources from sub directories，取消勾选 Copy sources into project。\n"),v("img",{attrs:{src:"/developer/fpga_2.jpg",alt:"Add Sources",title:"Add Sources"}})]),e._v(" "),v("li",[e._v("在 Add Constraints 页面中按下 Add Files，选择 "),v("code",[e._v("KiwiSDR.xdc")]),e._v("，不勾选 Copy constraints files into project。\n"),v("img",{attrs:{src:"/developer/fpga_3.jpg",alt:"Add Constraints",title:"Add Constraints"}})]),e._v(" "),v("li",[e._v("在 Default Part 页面中选择硬件。在搜索框中输入 "),v("code",[e._v("xc7a35tftg256-1")]),e._v("，选中列出的硬件。\n"),v("img",{attrs:{src:"/developer/fpga_4.jpg",alt:"Default Part",title:"Default Part"}})])]),e._v(" "),v("p",[e._v("专案创建完成后，在 Vivado 2019.2 主界面左侧菜单按下 Add Sources，添加 IP 核。")]),e._v(" "),v("ol",[v("li",[e._v("在出现的向导中选择 Add or create design sources。")]),e._v(" "),v("li",[e._v("在随后出现的 Add or Create Design Sources 页面中按下 Add Directories，选择 "),v("code",[e._v("project/flydog/import_ip")]),e._v("。勾选 Copy sources into project 和 Add sources from subdirectories，取消勾选 Scan and add RTL include files into project。\n"),v("img",{attrs:{src:"/developer/fpga_5.jpg",alt:"Add or Create Design Sources",title:"Add or Create Design Sources"}})]),e._v(" "),v("li",[e._v("按下 Finish，完成 IP 核的导入。")])]),e._v(" "),v("p",[e._v("IP 核导入时出现的严重警告是安全的，可以忽略。")]),e._v(" "),v("h2",{attrs:{id:"生成-fpga-比特流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成-fpga-比特流"}},[e._v("#")]),e._v(" 生成 FPGA 比特流")]),e._v(" "),v("p",[e._v("在 Sources 窗口中展开 Verilog Header 一项，双击 "),v("code",[e._v("kiwi.gen.vh")]),e._v(" 对其进行编辑。")]),e._v(" "),v("p",[v("code",[e._v("kiwi.gen.vh")]),e._v(" 会指定 Vivado 2019.2 生成不同的 FPGA 比特流文件，对应 FlyDog SDR 的 4 种接收模式。")]),e._v(" "),v("h3",{attrs:{id:"生成-kiwisdr-rx4-wf4-bit"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx4-wf4-bit"}},[e._v("#")]),e._v(" 生成 KiwiSDR.rx4.wf4.bit")]),e._v(" "),v("p",[e._v("默认情况下，"),v("code",[e._v("kiwi.gen.vh")]),e._v(" 中的配置为四用户（rx4）四瀑布（wf4）。")]),e._v(" "),v("p",[e._v("在 Vivado 2019.2 主界面左侧菜单按下 Generate Bitstream，随后 Vivado 2019.2 会对 IP 核进行综合，综合完成后，开始生成 FPGA 比特流。")]),e._v(" "),v("p",[e._v("根据计算机配置的不同，该过程所使用的时间亦有差异。")]),e._v(" "),v("p",[e._v("在综合过程中，会出现 Synthesis out-of-date 的警告，可以忽略。")]),e._v(" "),v("p",[e._v("生成的 FPGA 比特流文件路径为 "),v("code",[e._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),e._v("。将该文件重命名为 "),v("code",[e._v("KiwiSDR.rx4.wf4.bit")]),e._v(" 后，移动到其他目录。")]),e._v(" "),v("p",[e._v("直接关闭 Vivado 2019.2，然后通过 "),v("code",[e._v("project/flydog/flydog.xpr")]),e._v(" 重新打开专案，避免 Vivado 2019.2 因 Synthesis out-of-date 警告而导致接下来构建其他模式 FPGA 比特流时再次对 IP 核进行综合。")]),e._v(" "),v("h3",{attrs:{id:"生成-kiwisdr-rx3-wf3-bit"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx3-wf3-bit"}},[e._v("#")]),e._v(" 生成 KiwiSDR.rx3.wf3.bit")]),e._v(" "),v("p",[e._v("修改 "),v("code",[e._v("kiwi.gen.vh")]),e._v(" 文件 "),v("code",[e._v("RX_CFG")]),e._v(" 对应值为 "),v("code",[e._v("3")]),e._v("。")]),e._v(" "),v("p",[e._v("代码如下。")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("parameter RX_CFG = 4;\n`define USE_WF\n")])])]),v("p",[e._v("然后在 Vivado 2019.2 主界面左侧菜单按下 Generate Bitstream。")]),e._v(" "),v("p",[e._v("生成的 FPGA 比特流文件路径为 "),v("code",[e._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),e._v("。将该文件重命名为 "),v("code",[e._v("KiwiSDR.rx3.wf3.bit")]),e._v(" 后，移动到其他目录。")]),e._v(" "),v("h3",{attrs:{id:"生成-kiwisdr-rx8-wf2-bit"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx8-wf2-bit"}},[e._v("#")]),e._v(" 生成 KiwiSDR.rx8.wf2.bit")]),e._v(" "),v("p",[e._v("操作与生成 KiwiSDR.rx3.wf3.bit 大致相同，但 "),v("code",[e._v("kiwi.gen.vh")]),e._v(" 文件 "),v("code",[e._v("RX_CFG")]),e._v(" 字段对应值为 "),v("code",[e._v("8")]),e._v("。")]),e._v(" "),v("p",[e._v("代码如下。")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("parameter RX_CFG = 8;\n`define USE_WF\n")])])]),v("p",[e._v("生成的 FPGA 比特流文件路径为 "),v("code",[e._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),e._v("。将该文件重命名为 "),v("code",[e._v("KiwiSDR.rx8.wf2.bit")]),e._v(" 后，移动到其他目录。")]),e._v(" "),v("h3",{attrs:{id:"生成-kiwisdr-rx14-wf0-bit"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成-kiwisdr-rx14-wf0-bit"}},[e._v("#")]),e._v(" 生成 KiwiSDR.rx14.wf0.bit")]),e._v(" "),v("p",[e._v("操作与生成 KiwiSDR.rx3.wf3.bit 大致相同，但 "),v("code",[e._v("kiwi.gen.vh")]),e._v(" 文件 "),v("code",[e._v("RX_CFG")]),e._v(" 字段对应值为 "),v("code",[e._v("14")]),e._v("，且需要移除或者注释掉 "),v("code",[e._v("define USE_WF")]),e._v(" 字段。")]),e._v(" "),v("p",[e._v("代码如下。")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("parameter RX_CFG = 14;\n//``define USE_WF\n")])])]),v("p",[e._v("生成的 FPGA 比特流文件路径为 "),v("code",[e._v("project/flydog/flydog.runs/impl_1/KiwiSDR.bit")]),e._v("。将该文件重命名为 "),v("code",[e._v("KiwiSDR.rx14.wf0.bit")]),e._v(" 后，移动到其他目录。")])])}),[],!1,null,null,null);t.default=r.exports}}]);