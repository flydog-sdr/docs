(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{373:function(e,t,r){"use strict";r.r(t);var a=r(18),d=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"构建-docker-镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#构建-docker-镜像"}},[e._v("#")]),e._v(" 构建 Docker 镜像")]),e._v(" "),r("p",[e._v("FlyDog SDR 在 Docker 中运行，所以需要构建 FlyDog SDR 的 Docker 镜像。")]),e._v(" "),r("p",[e._v("目前，用户可通过两种方式构建 Docker 镜像。")]),e._v(" "),r("ul",[r("li",[e._v("通过 Docker Buildx 跨平台构建镜像")]),e._v(" "),r("li",[e._v("通过树莓派上直接构建")])]),e._v(" "),r("p",[e._v("下述内容将依次介绍这两种构建方式。")]),e._v(" "),r("h2",{attrs:{id:"搭建开发环境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#搭建开发环境"}},[e._v("#")]),e._v(" 搭建开发环境")]),e._v(" "),r("h3",{attrs:{id:"通过-docker-buildx"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通过-docker-buildx"}},[e._v("#")]),e._v(" 通过 Docker Buildx")]),e._v(" "),r("p",[e._v("Docker Buildx 是一个 Docker CLI 插件，扩展了 "),r("code",[e._v("docker")]),e._v(" 命令，支持 Moby BuildKit 提供的功能，为用户提供了与 "),r("code",[e._v("docker build")]),e._v(" 相同的体验，并增加了许多新功能。")]),e._v(" "),r("p",[e._v("Moby BuildKit 是下一代的镜像构建组件，利用其可以跨平台构建镜像的特性，本方法可以用于在 Linux、macOS 和 Windows 系统下构建 FlyDog SDR 的 Docker 镜像。")]),e._v(" "),r("p",[e._v("需要注意，该功能仅适用于 Docker v19.03+ 版本。")]),e._v(" "),r("p",[e._v("在已经安装了 Docker 的情况下，要使用 Docker Buildx，需要临时开启 Docker 实验特性。")]),e._v(" "),r("p",[e._v("Linux 或 macOS 下，使用 "),r("code",[e._v("export")]),e._v(" 命令设置环境变量。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ export DOCKER_CLI_EXPERIMENTAL=enabled\n\n")])])]),r("p",[e._v("对于 Windows 系统，在 Windows PowerShell 中使用 "),r("code",[e._v("set")]),e._v(" 命令打开 Docker 实验特性。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('PS C:\\Users\\FLYDOG> set $env:DOCKER_CLI_EXPERIMENTAL="enabled"\n\n')])])]),r("p",[e._v("然后检验 Docker Buildx 是否成功启用。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ docker buildx version\ngithub.com/docker/buildx v0.5.1-docker 11057da37336192bfc57d81e02359ba7ba848e4a\n\n")])])]),r("p",[e._v("新建一个 Builder 实例，名为 "),r("code",[e._v("arm_builder")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ docker buildx create --name arm_builder --driver docker-container\n\n")])])]),r("p",[e._v("指定使用新建的 Builder 实例。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ docker buildx use arm_builder\n\n")])])]),r("p",[e._v("检查已有的 Builder 实例，"),r("code",[e._v("arm_builder")]),e._v(" 应当包含于返回的结果中。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ docker buildx ls\nNAME/NODE      DRIVER/ENDPOINT             STATUS   PLATFORMS\narm_builder *  docker-container\n  arm_builder0 unix:///var/run/docker.sock inactive\ndefault        docker\n  default      default                     running  linux/amd64, linux/386\n\n")])])]),r("p",[e._v("Docker 在 "),r("code",[e._v("linux/amd64")]),e._v(" 系统架构下默认不支持构建 ARM 架构 Docker 镜像，因此需导入 "),r("code",[e._v("binfmt_misc")]),e._v("。")]),e._v(" "),r("p",[e._v("Windows 下安装的 Docker 无需进行此项设置。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ docker run --rm --privileged tonistiigi/binfmt --install all\n\n")])])]),r("h3",{attrs:{id:"通过树莓派"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通过树莓派"}},[e._v("#")]),e._v(" 通过树莓派")]),e._v(" "),r("p",[e._v("对处理器架构进行检查，确保架构为 "),r("code",[e._v("armv7l")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project: ~]$ uname -m\narmv7l\n\n")])])]),r("p",[e._v("使用 Docker 相关安装脚本实现自动化部署开发环境。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ sudo curl -o /tmp/get-docker.sh -fsSL get.docker.com\n[fdsdr@flydog-sdr-project ~]$ sudo chmod +x /tmp/get-docker.sh\n[fdsdr@flydog-sdr-project ~]$ sudo sh -c /tmp/get-docker.sh\n\n")])])]),r("p",[e._v("对于中国大陆开发者，在安装 Docker 时，可以加上 "),r("code",[e._v("--mirror AzureChinaCloud")]),e._v(" 参数，使用 AzureChinaCloud 镜像进行安装。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ sudo sh -c /tmp/get-docker.sh --mirror AzureChinaCloud\n\n")])])]),r("p",[e._v("安装完成后，将当前用户添加至 Docker 用户组 "),r("code",[e._v("docker")]),e._v("，然后重启。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ sudo usermod -aG docker ${USER}\n[fdsdr@flydog-sdr-project ~]$ sudo systemctl enable docker\n[fdsdr@flydog-sdr-project ~]$ sudo reboot\n\n")])])]),r("h2",{attrs:{id:"拉取-dockerfile"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#拉取-dockerfile"}},[e._v("#")]),e._v(" 拉取 Dockerfile")]),e._v(" "),r("p",[e._v("确保开发机器已经安装 Git，并从 GitHub 拉取构建 FlyDog SDR 所需的 Dockerfiles。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ git clone https://github.com/flydog-sdr/docker-builder\n\n")])])]),r("p",[e._v("对于中国大陆开发者，可能需要将 "),r("code",[e._v("github.com")]),e._v(" 替换为其镜像地址 "),r("code",[e._v("github.com.cnpmjs.org")]),e._v("，以加速拉取速度。")]),e._v(" "),r("p",[e._v("进入 "),r("code",[e._v("docker-builder/flydog-sdr")]),e._v(" 目录，对 "),r("code",[e._v("Dockerfile")]),e._v(" 中相关环境变量酌情修改。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project ~]$ cd docker-builder/flydog-sdr\n[fdsdr@flydog-sdr-project flydog-sdr]$ vim Dockerfile\n\n")])])]),r("p",[e._v("相关变量说明如下。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"left"}},[e._v("变量")]),e._v(" "),r("th",{staticStyle:{"text-align":"left"}},[e._v("说明")])])]),e._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"left"}},[r("code",[e._v("APT_MIRROR")])]),e._v(" "),r("td",{staticStyle:{"text-align":"left"}},[e._v("Debian 镜像源")])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[r("code",[e._v("GIT_BRANCH")])]),e._v(" "),r("td",{staticStyle:{"text-align":"left"}},[e._v("指定 Git 分支")])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[r("code",[e._v("GIT_HOST")])]),e._v(" "),r("td",{staticStyle:{"text-align":"left"}},[e._v("指定 GitHub 域名，针对中国大陆加快构建速度")])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[r("code",[e._v("GIT_USER")])]),e._v(" "),r("td",{staticStyle:{"text-align":"left"}},[e._v("指定要拉取之专案所对应的用户名")])]),e._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[r("code",[e._v("REPO_NANE")])]),e._v(" "),r("td",{staticStyle:{"text-align":"left"}},[e._v("指定专案名称")])])])]),e._v(" "),r("h2",{attrs:{id:"执行构建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#执行构建"}},[e._v("#")]),e._v(" 执行构建")]),e._v(" "),r("h3",{attrs:{id:"通过-docker-buildx-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通过-docker-buildx-2"}},[e._v("#")]),e._v(" 通过 Docker Buildx")]),e._v(" "),r("p",[e._v("使用 "),r("code",[e._v("docker buildx")]),e._v(" 命令启动构建进程。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project flydog-sdr]$ docker buildx build --platform linux/arm/v7 -t flydog-sdr -o type=docker -f ./Dockerfile .\n\n")])])]),r("p",[e._v("大约 20 分钟后，即可完成构建，Docker 镜像列表中亦可看到刚刚生成的镜像。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project flydog-sdr]$ docker images\nREPOSITORY                                                TAG        IMAGE ID       CREATED        SIZE\n\nflydog-sdr                                                latest     7865b2e324eb   22 hours ago   252MB\n\n")])])]),r("h3",{attrs:{id:"通过树莓派-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通过树莓派-2"}},[e._v("#")]),e._v(" 通过树莓派")]),e._v(" "),r("p",[e._v("使用 "),r("code",[e._v("docker build")]),e._v(" 命令启动构建进程。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project flydog-sdr]$ docker build -t flydog-sdr .\n\n")])])]),r("p",[e._v("大约 20 分钟后，即可完成构建，Docker 镜像列表中亦可看到刚刚生成的镜像。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("[fdsdr@flydog-sdr-project flydog-sdr]$ docker images\nREPOSITORY                                                TAG        IMAGE ID       CREATED        SIZE\n\nflydog-sdr                                                latest     7865b2e324eb   22 hours ago   252MB\n\n")])])])])}),[],!1,null,null,null);t.default=d.exports}}]);